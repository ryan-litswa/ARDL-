L(residuals_long_run, 1), data = ts_country)
# View the summary for each country
print(paste("ECM for", country))
print(summary(ecm_model))
}
# Create a data frame to store the results
okun_results <- data.frame(Country = character(),
Slope = numeric(),
Intercept = numeric(),
R_squared = numeric(),
stringsAsFactors = FALSE)
# Loop over each country to calculate changes and run the regression
for (country in countries) {
# Subset the data for each country
country_data <- subset(pdata, Country == country)
# Convert country data to a regular data frame to avoid pseries issues
country_data <- as.data.frame(country_data)
# Calculate the change in unemployment and the GDP growth rate
country_data$diff_unemployment <- as.numeric(diff(country_data$Unemployment_Rate))
country_data$gdp_growth_rate <- 100 * diff(log(country_data$GDP))  # Calculate GDP growth rate in percentage form
# Remove NA values that result from differencing
country_data <- na.omit(country_data)
# Run the linear regression (Change in Unemployment Rate ~ GDP Growth Rate)
okun_model <- lm(diff_unemployment ~ gdp_growth_rate, data = country_data)
# Extract the regression results
slope <- coef(okun_model)[2]
intercept <- coef(okun_model)[1]
r_squared <- summary(okun_model)$r.squared
# Store the results in the data frame
okun_results <- rbind(okun_results, data.frame(Country = country,
Slope = slope,
Intercept = intercept,
R_squared = r_squared))
# Create a scatter plot with a regression line
plot <- ggplot(country_data, aes(x = gdp_growth_rate, y = diff_unemployment)) +
geom_point(color = "blue") +
geom_smooth(method = "lm", se = FALSE, color = "red") +
labs(title = paste("Okun's Law for", country),
x = "GDP Growth Rate (%)",
y = "Change in Unemployment Rate",
caption = paste("R-squared:", round(r_squared, 2))) +
theme_minimal() +
scale_x_continuous(labels = scales::percent_format(scale = 1))  # Format X-axis as percentage
# Print the plot for each country
print(plot)
}
# View the Okun's Law results summary for all countries
print(okun_results)
# Install necessary packages
install.packages(c("plm", "tseries", "urca", "vars", "dynlm","car"))
# Load libraries
library(car)
library(plm)
library(tseries)
library(urca)
library(vars)
library(dynlm)
library(ggplot2)
library(scales)  # For formatting numbers
library(dplyr)
# Load your dataset (replace 'your_data.csv' with your actual data file)
data <- read.csv("Countries.csv")
# Convert your data to a panel data frame (replace 'Country' and 'Year' with your column names)
pdata <- pdata.frame(data, index = c("Country", "Year"))
# Summary statistics for all variables
summary(pdata)
# SUmmary statistics for indivdiual countries
# Create a summary statistics table for each country
summary_by_country <- pdata %>%
group_by(Country) %>%
summarise(
Mean_Unemployment_Rate = mean(Unemployment_Rate, na.rm = TRUE),
SD_Unemployment_Rate = sd(Unemployment_Rate, na.rm = TRUE),
Mean_GDP = mean(GDP, na.rm = TRUE),
SD_GDP = sd(GDP, na.rm = TRUE),
Mean_FDI = mean(FDI, na.rm = TRUE),
SD_FDI = sd(FDI, na.rm = TRUE),
Mean_Inflation = mean(Inflation, na.rm = TRUE),
SD_Inflation = sd(Inflation, na.rm = TRUE),
Mean_Population_Rate = mean(Population_Rate, na.rm = TRUE),
SD_Population_Rate = sd(Population_Rate, na.rm = TRUE)
)
# Print the summary statistics by country
print(summary_by_country)
# Install necessary packages
#install.packages(c("plm", "tseries", "urca", "vars", "dynlm","car"))
#Loading the necessary libraries
library(plm)
library(tseries)
library(urca)
library(vars)
library(dynlm)
library(car)
library(ggplot2)
library(scales)  # For formatting numbers
knitr::opts_chunk$set(echo = TRUE)
data <- read.csv("Countries.csv")
# Convert data to a panel data frame (replace 'Country' and 'Year' with your column names)
pdata <- pdata.frame(data, index = c("Country", "Year"))
summary(pdata)
# Create a summary statistics table for each country
summary_by_country <- pdata %>%
group_by(Country) %>%
summarise(
Mean_Unemployment_Rate = mean(Unemployment_Rate, na.rm = TRUE),
SD_Unemployment_Rate = sd(Unemployment_Rate, na.rm = TRUE),
Mean_GDP = mean(GDP, na.rm = TRUE),
SD_GDP = sd(GDP, na.rm = TRUE),
Mean_FDI = mean(FDI, na.rm = TRUE),
SD_FDI = sd(FDI, na.rm = TRUE),
Mean_Inflation = mean(Inflation, na.rm = TRUE),
SD_Inflation = sd(Inflation, na.rm = TRUE),
Mean_Population_Rate = mean(Population_Rate, na.rm = TRUE),
SD_Population_Rate = sd(Population_Rate, na.rm = TRUE)
)
# Print the summary statistics by country
print(summary_by_country)
# Check for multicollinearity using VIF
vif_model <- lm(Unemployment_Rate ~ GDP + FDI + Inflation + Population_Rate, data = pdata)
vif(vif_model)
# STEP 1 Stationairy check for each varaible
#Im, Pesaran, and Shin (IPS) test for panel unit root
ips_unemployment <- purtest(pdata$Unemployment_Rate, test = "ips", exo = "intercept")
# JUST IF P-value not <0.05 for unemployment i tested earlier I(1) is the right one
diff_Unemployment <- diff(pdata$Unemployment_Rate)
ips_unemployment_diff <- purtest(diff_Unemployment, test = "ips", exo = "intercept")
summary(ips_unemployment_diff)
# IPS test for GDP
ips_GDP <- purtest(pdata$GDP, test= "ips", exo = "intercept")
#IF GDP p-value not <0.05 same for GDP I(1)
diff_gdp <- diff(pdata$GDP)
ips_gdp_diff <- purtest(diff_gdp, test = "ips",lags = 1, exo = "intercept")
summary(ips_gdp_diff)
# IPS TEST FOR FDI
ips_FDI <- purtest(pdata$FDI, test= "ips", exo = "intercept")
summary(ips_FDI)
#IF GDP p-value not <0.05 FOR FDI it is BOth I(0) and I(1)
diff_FDI <- diff(pdata$FDI)
ips_FDI_diff <- purtest(diff_FDI, test = "ips", exo = "intercept")
summary(ips_FDI_diff)
# IPS TEST FOR Population
ips_population <- purtest(pdata$Population_Rate, test= "ips", exo = "intercept")
#IF GDP p-value not <0.05 for population it is I(1) and lags =1 was deliberately set to 1 for it to work
diff_Population <- diff(pdata$Population_Rate)
ips_Population_diff <- purtest(diff_Population, test = "ips",lags = 1, exo = "intercept")
summary(ips_Population_diff)
# IPS TEST FOR INFLATION
ips_inflation <- purtest(pdata$Inflation, test= "ips", exo = "intercept")
summary(ips_inflation)
#Intresting that inflation is I(0) but only I(1) if lags=1 so i left it at just I(0)
lag_selection <- VARselect(pdata[, c("Unemployment_Rate", "GDP", "FDI", "Inflation", "Population_Rate")], lag.max = 5, type = "const")
lag_selection$selection
# Display optimal lag lengths based on AIC, BIC, HQ
# Adjust ARDL model to include all variables
ardl_model <- dynlm(Unemployment_Rate ~ L(Unemployment_Rate, 1) +
L(GDP, 1) +
L(FDI, 1) +
L(Inflation, 1) +
L(Population_Rate, 1), data = pdata)
# Extract residuals
residuals <- resid(ardl_model)
# Test for cointegration (unit root test on residuals)
cointegration_test <- ur.df(residuals, type = "none")
summary(cointegration_test)
countries <- unique(pdata$Country)
for (country in countries) {
country_data <- subset(pdata, Country == country)
ts_country <- ts(country_data[, -c(1, 2)], start = 1992, frequency = 1)
# Estimate long-run model
long_run_model <- dynlm(Unemployment_Rate ~ GDP + FDI + Inflation + Population_Rate, data = ts_country)
# Extract residuals
residuals_long_run <- resid(long_run_model)
# Estimate ECM
ecm_model <- dynlm(d(Unemployment_Rate) ~ L(Unemployment_Rate, 1) +
d(GDP) +
d(FDI) +
d(Inflation) +
d(Population_Rate) +
L(residuals_long_run, 1), data = ts_country)
# View the summary for each country
print(paste("ECM for", country))
print(summary(ecm_model))
}
# Create a data frame to store the results
okun_results <- data.frame(Country = character(),
Slope = numeric(),
Intercept = numeric(),
R_squared = numeric(),
stringsAsFactors = FALSE)
# Loop over each country to calculate changes and run the regression
for (country in countries) {
# Subset the data for each country
country_data <- subset(pdata, Country == country)
# Convert country data to a regular data frame to avoid pseries issues
country_data <- as.data.frame(country_data)
# Calculate the change in unemployment and the GDP growth rate
country_data$diff_unemployment <- as.numeric(diff(country_data$Unemployment_Rate))
country_data$gdp_growth_rate <- 100 * diff(log(country_data$GDP))  # Calculate GDP growth rate in percentage form
# Remove NA values that result from differencing
country_data <- na.omit(country_data)
# Run the linear regression (Change in Unemployment Rate ~ GDP Growth Rate)
okun_model <- lm(diff_unemployment ~ gdp_growth_rate, data = country_data)
# Extract the regression results
slope <- coef(okun_model)[2]
intercept <- coef(okun_model)[1]
r_squared <- summary(okun_model)$r.squared
# Store the results in the data frame
okun_results <- rbind(okun_results, data.frame(Country = country,
Slope = slope,
Intercept = intercept,
R_squared = r_squared))
# Create a scatter plot with a regression line
plot <- ggplot(country_data, aes(x = gdp_growth_rate, y = diff_unemployment)) +
geom_point(color = "blue") +
geom_smooth(method = "lm", se = FALSE, color = "red") +
labs(title = paste("Okun's Law for", country),
x = "GDP Growth Rate (%)",
y = "Change in Unemployment Rate",
caption = paste("R-squared:", round(r_squared, 2))) +
theme_minimal() +
scale_x_continuous(labels = scales::percent_format(scale = 1))  # Format X-axis as percentage
# Print the plot for each country
print(plot)
}
# View the Okun's Law results summary for all countries
print(okun_results)
# Install necessary packages
#install.packages(c("plm", "tseries", "urca", "vars", "dynlm","car"))
#Loading the necessary libraries
library(plm)
library(tseries)
library(urca)
library(vars)
library(dynlm)
library(car)
library(ggplot2)
library(scales)  # For formatting numbers
library(dplyr)
knitr::opts_chunk$set(echo = TRUE)
data <- read.csv("Countries.csv")
# Convert data to a panel data frame (replace 'Country' and 'Year' with your column names)
pdata <- pdata.frame(data, index = c("Country", "Year"))
summary(pdata)
# Create a summary statistics table for each country
summary_by_country <- pdata %>%
group_by(Country) %>%
summarise(
Mean_Unemployment_Rate = mean(Unemployment_Rate, na.rm = TRUE),
SD_Unemployment_Rate = sd(Unemployment_Rate, na.rm = TRUE),
Mean_GDP = mean(GDP, na.rm = TRUE),
SD_GDP = sd(GDP, na.rm = TRUE),
Mean_FDI = mean(FDI, na.rm = TRUE),
SD_FDI = sd(FDI, na.rm = TRUE),
Mean_Inflation = mean(Inflation, na.rm = TRUE),
SD_Inflation = sd(Inflation, na.rm = TRUE),
Mean_Population_Rate = mean(Population_Rate, na.rm = TRUE),
SD_Population_Rate = sd(Population_Rate, na.rm = TRUE)
)
# Print the summary statistics by country
print(summary_by_country)
# Check for multicollinearity using VIF
vif_model <- lm(Unemployment_Rate ~ GDP + FDI + Inflation + Population_Rate, data = pdata)
vif(vif_model)
# STEP 1 Stationairy check for each varaible
#Im, Pesaran, and Shin (IPS) test for panel unit root
ips_unemployment <- purtest(pdata$Unemployment_Rate, test = "ips", exo = "intercept")
# JUST IF P-value not <0.05 for unemployment i tested earlier I(1) is the right one
diff_Unemployment <- diff(pdata$Unemployment_Rate)
ips_unemployment_diff <- purtest(diff_Unemployment, test = "ips", exo = "intercept")
summary(ips_unemployment_diff)
# IPS test for GDP
ips_GDP <- purtest(pdata$GDP, test= "ips", exo = "intercept")
#IF GDP p-value not <0.05 same for GDP I(1)
diff_gdp <- diff(pdata$GDP)
ips_gdp_diff <- purtest(diff_gdp, test = "ips",lags = 1, exo = "intercept")
summary(ips_gdp_diff)
# IPS TEST FOR FDI
ips_FDI <- purtest(pdata$FDI, test= "ips", exo = "intercept")
summary(ips_FDI)
#IF GDP p-value not <0.05 FOR FDI it is BOth I(0) and I(1)
diff_FDI <- diff(pdata$FDI)
ips_FDI_diff <- purtest(diff_FDI, test = "ips", exo = "intercept")
summary(ips_FDI_diff)
# IPS TEST FOR Population
ips_population <- purtest(pdata$Population_Rate, test= "ips", exo = "intercept")
#IF GDP p-value not <0.05 for population it is I(1) and lags =1 was deliberately set to 1 for it to work
diff_Population <- diff(pdata$Population_Rate)
ips_Population_diff <- purtest(diff_Population, test = "ips",lags = 1, exo = "intercept")
summary(ips_Population_diff)
# IPS TEST FOR INFLATION
ips_inflation <- purtest(pdata$Inflation, test= "ips", exo = "intercept")
summary(ips_inflation)
#Intresting that inflation is I(0) but only I(1) if lags=1 so i left it at just I(0)
lag_selection <- VARselect(pdata[, c("Unemployment_Rate", "GDP", "FDI", "Inflation", "Population_Rate")], lag.max = 5, type = "const")
lag_selection$selection
# Display optimal lag lengths based on AIC, BIC, HQ
# Adjust ARDL model to include all variables
ardl_model <- dynlm(Unemployment_Rate ~ L(Unemployment_Rate, 1) +
L(GDP, 1) +
L(FDI, 1) +
L(Inflation, 1) +
L(Population_Rate, 1), data = pdata)
# Extract residuals
residuals <- resid(ardl_model)
# Test for cointegration (unit root test on residuals)
cointegration_test <- ur.df(residuals, type = "none")
summary(cointegration_test)
countries <- unique(pdata$Country)
for (country in countries) {
country_data <- subset(pdata, Country == country)
ts_country <- ts(country_data[, -c(1, 2)], start = 1992, frequency = 1)
# Estimate long-run model
long_run_model <- dynlm(Unemployment_Rate ~ GDP + FDI + Inflation + Population_Rate, data = ts_country)
# Extract residuals
residuals_long_run <- resid(long_run_model)
# Estimate ECM
ecm_model <- dynlm(d(Unemployment_Rate) ~ L(Unemployment_Rate, 1) +
d(GDP) +
d(FDI) +
d(Inflation) +
d(Population_Rate) +
L(residuals_long_run, 1), data = ts_country)
# View the summary for each country
print(paste("ECM for", country))
print(summary(ecm_model))
}
# Create a data frame to store the results
okun_results <- data.frame(Country = character(),
Slope = numeric(),
Intercept = numeric(),
R_squared = numeric(),
stringsAsFactors = FALSE)
# Loop over each country to calculate changes and run the regression
for (country in countries) {
# Subset the data for each country
country_data <- subset(pdata, Country == country)
# Convert country data to a regular data frame to avoid pseries issues
country_data <- as.data.frame(country_data)
# Calculate the change in unemployment and the GDP growth rate
country_data$diff_unemployment <- as.numeric(diff(country_data$Unemployment_Rate))
country_data$gdp_growth_rate <- 100 * diff(log(country_data$GDP))  # Calculate GDP growth rate in percentage form
# Remove NA values that result from differencing
country_data <- na.omit(country_data)
# Run the linear regression (Change in Unemployment Rate ~ GDP Growth Rate)
okun_model <- lm(diff_unemployment ~ gdp_growth_rate, data = country_data)
# Extract the regression results
slope <- coef(okun_model)[2]
intercept <- coef(okun_model)[1]
r_squared <- summary(okun_model)$r.squared
# Store the results in the data frame
okun_results <- rbind(okun_results, data.frame(Country = country,
Slope = slope,
Intercept = intercept,
R_squared = r_squared))
# Create a scatter plot with a regression line
plot <- ggplot(country_data, aes(x = gdp_growth_rate, y = diff_unemployment)) +
geom_point(color = "blue") +
geom_smooth(method = "lm", se = FALSE, color = "red") +
labs(title = paste("Okun's Law for", country),
x = "GDP Growth Rate (%)",
y = "Change in Unemployment Rate",
caption = paste("R-squared:", round(r_squared, 2))) +
theme_minimal() +
scale_x_continuous(labels = scales::percent_format(scale = 1))  # Format X-axis as percentage
# Print the plot for each country
print(plot)
}
# View the Okun's Law results summary for all countries
print(okun_results)
# Install necessary packages
#install.packages(c("plm", "tseries", "urca", "vars", "dynlm","car"))
#Loading the necessary libraries
library(plm)
library(tseries)
library(urca)
library(vars)
library(dynlm)
library(car)
library(ggplot2)
library(scales)  # For formatting numbers
library(dplyr)
knitr::opts_chunk$set(echo = TRUE)
data <- read.csv("Countries.csv")
# Convert data to a panel data frame (replace 'Country' and 'Year' with your column names)
pdata <- pdata.frame(data, index = c("Country", "Year"))
summary(pdata)
# Create a summary statistics table for each country
summary_by_country <- pdata %>%
group_by(Country) %>%
summarise(
Mean_Unemployment_Rate = mean(Unemployment_Rate, na.rm = TRUE),
SD_Unemployment_Rate = sd(Unemployment_Rate, na.rm = TRUE),
Mean_GDP = mean(GDP, na.rm = TRUE),
SD_GDP = sd(GDP, na.rm = TRUE),
Mean_FDI = mean(FDI, na.rm = TRUE),
SD_FDI = sd(FDI, na.rm = TRUE),
Mean_Inflation = mean(Inflation, na.rm = TRUE),
SD_Inflation = sd(Inflation, na.rm = TRUE),
Mean_Population_Rate = mean(Population_Rate, na.rm = TRUE),
SD_Population_Rate = sd(Population_Rate, na.rm = TRUE)
)
# Print the summary statistics by country
print(summary_by_country)
# Check for multicollinearity using VIF
vif_model <- lm(Unemployment_Rate ~ GDP + FDI + Inflation + Population_Rate, data = pdata)
vif(vif_model)
# STEP 1 Stationairy check for each varaible
#Im, Pesaran, and Shin (IPS) test for panel unit root
ips_unemployment <- purtest(pdata$Unemployment_Rate, test = "ips", exo = "intercept")
# JUST IF P-value not <0.05 for unemployment i tested earlier I(1) is the right one
diff_Unemployment <- diff(pdata$Unemployment_Rate)
ips_unemployment_diff <- purtest(diff_Unemployment, test = "ips", exo = "intercept")
summary(ips_unemployment_diff)
# IPS test for GDP
ips_GDP <- purtest(pdata$GDP, test= "ips", exo = "intercept")
#IF GDP p-value not <0.05 same for GDP I(1)
diff_gdp <- diff(pdata$GDP)
ips_gdp_diff <- purtest(diff_gdp, test = "ips",lags = 1, exo = "intercept")
summary(ips_gdp_diff)
# IPS TEST FOR FDI
ips_FDI <- purtest(pdata$FDI, test= "ips", exo = "intercept")
summary(ips_FDI)
#IF GDP p-value not <0.05 FOR FDI it is BOth I(0) and I(1)
diff_FDI <- diff(pdata$FDI)
ips_FDI_diff <- purtest(diff_FDI, test = "ips", exo = "intercept")
summary(ips_FDI_diff)
# IPS TEST FOR Population
ips_population <- purtest(pdata$Population_Rate, test= "ips", exo = "intercept")
#IF GDP p-value not <0.05 for population it is I(1) and lags =1 was deliberately set to 1 for it to work
diff_Population <- diff(pdata$Population_Rate)
ips_Population_diff <- purtest(diff_Population, test = "ips",lags = 1, exo = "intercept")
summary(ips_Population_diff)
# IPS TEST FOR INFLATION
ips_inflation <- purtest(pdata$Inflation, test= "ips", exo = "intercept")
summary(ips_inflation)
#Intresting that inflation is I(0) but only I(1) if lags=1 so i left it at just I(0)
lag_selection <- VARselect(pdata[, c("Unemployment_Rate", "GDP", "FDI", "Inflation", "Population_Rate")], lag.max = 5, type = "const")
lag_selection$selection
# Display optimal lag lengths based on AIC, BIC, HQ
# Adjust ARDL model to include all variables
ardl_model <- dynlm(Unemployment_Rate ~ L(Unemployment_Rate, 1) +
L(GDP, 1) +
L(FDI, 1) +
L(Inflation, 1) +
L(Population_Rate, 1), data = pdata)
# Extract residuals
residuals <- resid(ardl_model)
# Test for cointegration (unit root test on residuals)
cointegration_test <- ur.df(residuals, type = "none")
summary(cointegration_test)
countries <- unique(pdata$Country)
for (country in countries) {
country_data <- subset(pdata, Country == country)
ts_country <- ts(country_data[, -c(1, 2)], start = 1992, frequency = 1)
# Estimate long-run model
long_run_model <- dynlm(Unemployment_Rate ~ GDP + FDI + Inflation + Population_Rate, data = ts_country)
# Extract residuals
residuals_long_run <- resid(long_run_model)
# Estimate ECM
ecm_model <- dynlm(d(Unemployment_Rate) ~ L(Unemployment_Rate, 1) +
d(GDP) +
d(FDI) +
d(Inflation) +
d(Population_Rate) +
L(residuals_long_run, 1), data = ts_country)
# View the summary for each country
print(paste("ECM for", country))
print(summary(ecm_model))
}
# Create a data frame to store the results
okun_results <- data.frame(Country = character(),
Slope = numeric(),
Intercept = numeric(),
R_squared = numeric(),
stringsAsFactors = FALSE)
# Loop over each country to calculate changes and run the regression
for (country in countries) {
# Subset the data for each country
country_data <- subset(pdata, Country == country)
# Convert country data to a regular data frame to avoid pseries issues
country_data <- as.data.frame(country_data)
# Calculate the change in unemployment and the GDP growth rate
country_data$diff_unemployment <- as.numeric(diff(country_data$Unemployment_Rate))
country_data$gdp_growth_rate <- 100 * diff(log(country_data$GDP))  # Calculate GDP growth rate in percentage form
# Remove NA values that result from differencing
country_data <- na.omit(country_data)
# Run the linear regression (Change in Unemployment Rate ~ GDP Growth Rate)
okun_model <- lm(diff_unemployment ~ gdp_growth_rate, data = country_data)
# Extract the regression results
slope <- coef(okun_model)[2]
intercept <- coef(okun_model)[1]
r_squared <- summary(okun_model)$r.squared
# Store the results in the data frame
okun_results <- rbind(okun_results, data.frame(Country = country,
Slope = slope,
Intercept = intercept,
R_squared = r_squared))
# Create a scatter plot with a regression line
plot <- ggplot(country_data, aes(x = gdp_growth_rate, y = diff_unemployment)) +
geom_point(color = "red") +
geom_smooth(method = "lm", se = FALSE, color = "black") +
labs(title = paste("Okun's Law for", country),
x = "GDP Growth Rate (%)",
y = "Change in Unemployment Rate",
caption = paste("R-squared:", round(r_squared, 2))) +
theme_minimal() +
scale_x_continuous(labels = scales::percent_format(scale = 1))  # Format X-axis as percentage
# Print the plot for each country
print(plot)
}
# View the Okun's Law results summary for all countries
print(okun_results)
